{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","negociacao","ConnectionFactory","getConnection","then","NegociacaoDao","connection","dao","adiciona","catch","console","log","erro","Error","listaTodos","apagaTodos","listaAtual","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","negociacoes","reduce","arrayAchatado","array","concat","filter","some","JSON","stringify","n","get","map","Negociacao","Date","obj","data","quantidade","valor","error"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n  constructor() {\r\n    this._http = new HttpService();\r\n  }\r\n\r\n  cadastrar(negociacao) {\r\n    return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => \"Negociação adicionada com sucesso\")\r\n            .catch(erro => {\r\n              console.log(erro);\r\n              throw new Error(\"Não foi possível adicionar a negociação\")\r\n            })\r\n  }\r\n\r\n  lista() {\r\n    return ConnectionFactory\r\n      \t  \t.getConnection()\r\n      \t  \t.then(connection => new NegociacaoDao(connection))\r\n      \t  \t.then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n              console.log(erro);\r\n              throw new Error(\"Não foi possível obter as negociações\")\r\n            });\r\n  }\r\n\r\n  apaga() {\r\n    return ConnectionFactory\r\n      \t  \t.getConnection()\r\n      \t  \t.then(connection => new NegociacaoDao(connection))\r\n      \t  \t.then(dao => dao.apagaTodos())\r\n            .then(() => \"Negociação removidas com sucesso\")\r\n            .catch(erro => {\r\n              console.log(erro);\r\n              throw new Error(\"Não foi possível apagar as negociações\")\r\n            });\r\n  }\r\n\r\n  importa(listaAtual) {\r\n    return Promise.all([\r\n      this.obterNegociacoesDaSemana(),\r\n      this.obterNegociacoesDaSemanaAnterior(),\r\n      this.obterNegociacoesDaSemanaRetrasada()\r\n    ])\r\n    .then(negociacoes => {\r\n      negociacoes = negociacoes.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n      return negociacoes.filter(negociacao =>\r\n          !listaAtual.some(n =>\r\n               JSON.stringify(negociacao) == JSON.stringify(n)))\r\n    })\r\n    .catch(erro => {\r\n      console.log(erro);\r\n      throw new Error(\"Não foi possível apagar as negociações\")\r\n    });\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n    return this._http\r\n      .get('negociacoes/semana')\r\n      .then(negociacoes => negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível importar negociações da semana.');\r\n      });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n    return this._http\r\n      .get('negociacoes/retrasada')\r\n      .then(negociacoes => negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível importar negociações da semana retrasada.');\r\n      });\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n    return this._http\r\n      .get('negociacoes/anterior')\r\n      .then(negociacoes => negociacoes.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)))\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível importar negociações da semana anterior.');\r\n      });\r\n  }\r\n}\r\n"]}